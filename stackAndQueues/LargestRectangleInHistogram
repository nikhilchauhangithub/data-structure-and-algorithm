Question on leetcode 84

understandable approach

class Solution {
   
    public int largestRectangleArea(int[] heights) {
     int n=heights.length;
     int[] left=new int[n];
     int[] right=new int[n];
Stack<Integer> st=new Stack<>();

for(int i=0;i<n;i++){
    while(!st.empty() && heights[st.peek()] >=heights[i]){
        st.pop();
    }
    right[i]=st.empty() ? -1:st.peek();
    st.push(i);
}
while(!st.empty()){
    st.pop();
}
for(int i=n-1;i>=0;i--){
    while(!st.empty() && heights[st.peek()]>=heights[i]){
        st.pop();
    }
     left[i]=st.empty() ? n:st.peek();
    st.push(i);
}

int maxArea=0;
for(int i=0;i<n;i++){
    maxArea=Math.max(maxArea,heights[i]*(left[i]-right[i]-1));
    
}
return maxArea;
  }


}
