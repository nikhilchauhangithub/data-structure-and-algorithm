package com.company;

public class sudokuSolver {
    public static void main(String[] args) {
int[][] board=new int[][]
        {
            {3, 0, 6, 5, 0, 8, 4, 0, 0},
            {5, 2, 0, 0, 0, 0, 0, 0, 0},
            {0, 8, 7, 0, 0, 0, 0, 3, 1},
            {0, 0, 3, 0, 1, 0, 0, 8, 0},
            {9, 0, 0, 8, 6, 3, 0, 0, 5},
            {0, 5, 0, 0, 9, 0, 6, 0, 0},
            {1, 3, 0, 0, 0, 0, 2, 5, 0},
            {0, 0, 0, 0, 0, 0, 0, 7, 4},
            {0, 0, 5, 2, 0, 6, 3, 0, 0}
        };
        solveSuduko(board,0,0);
    }

 static void solveSuduko(int[][] board,int row,int col){

        if (row==board.length){
            display(board);
            return;
        }

        int nextRow=0;
        int nextCol=0;

        if (col==board[0].length-1){
            nextRow=row+1;
            nextCol=0;
        }
        else {
            nextCol=col+1;
            nextRow=row;
        }

        if (board[row][col]!=0){
            solveSuduko(board,nextRow,nextCol);
        }
        else {
            for (int val=1;val<=9;val++){
                if (isSafe(board, row, col, val)){
                    board[row][col]=val;
                    solveSuduko(board,nextRow,nextCol);
                    board[row][col]=0;
                }
            }
        }
 }



    public static void display(int[][] board){
     for (int i=0;i<board.length;i++){
         for (int j=0;j<board[0].length;j++){
             System.out.print(board[i][j]+" ");
         }
         System.out.println();
     }
    }
    static boolean isSafe(int[][] board,int roo,int cool,int num){
for (int i=0;i<board.length;i++){
    if (board[i][cool]==num){
        return false;
    }
    if (board[roo][i]==num){
        return false;
    }

    if (board[3*(roo/3)+i/3][3*(cool/3)+i%3]==num){
        return false;
    }

}
return true;
    }

}
